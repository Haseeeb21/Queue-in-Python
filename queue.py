# -*- coding: utf-8 -*-
"""Queue.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bSpbxfnglBg5aAnKO8X8uMvxVDTIt5bp
"""

from collections import deque

class Queue:
    def __init__(self):
      self.buffer = deque()
    def enque(self, val):
      self.buffer.appendleft(val)
    def deque(self):
      if len(self.buffer)==0:
        print("Queue is empty.")
        return
      return self.buffer.pop()
    def is_empty(self):
      return len(self.buffer)==0
    def size(self):
      return len(self.buffer)
    def front(self):
      return self.buffer[-1]
    def last(self):
      return self.buffer[0]

q = Queue()

for i in range(10):
  q.enque(i)

print("Queue:", q.buffer)
print("Size:", q.size())
print("Is empty:", q.is_empty())
print("Front:", q.front())
print("Last:", q.last())

print("Dequeuing:", end='\n')

for i in range(9):
  print(q.deque())

print("Queue:", q.buffer)



from collections import deque

class Queue:
  def __init__(self):
    self.buffer = deque()
  def enque(self, val):
    self.buffer.appendleft(val)
  def deque(self):
    return self.buffer.pop()
  def is_empty(self):
    return len(self.buffer) == 0
  def size(self):
    return len(self.buffer)
  def front(self):
    return self.buffer[-1]
  def last(self):
    return self.buffer[0]

q = Queue()



name = input("Enter: ")
print(name[::-1])

for i in name:
  q.enque(i)

print(q.buffer)
q.size())
print(q.last())
print(q.front())
print(q.deque())


print(q.is_empty())